-- MySQL Script generated by MySQL Workbench
-- mar. 18 sept. 2018 12:13:36 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema TD1
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `TD1` ;

-- -----------------------------------------------------
-- Schema TD1
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TD1` DEFAULT CHARACTER SET utf8 ;
USE `TD1` ;

-- -----------------------------------------------------
-- Table `TD1`.`ouvrage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TD1`.`ouvrage` (
  `ISBN` VARCHAR(50) NOT NULL,
  `titre` VARCHAR(45) NULL,
  PRIMARY KEY (`ISBN`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TD1`.`livre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TD1`.`livre` (
  `cote` VARCHAR(30) NOT NULL,
  `empruntable` TINYINT(1) NULL,
  `ouvrage_ISBN` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`cote`, `ouvrage_ISBN`),
  INDEX `fk_livre_ouvrage1_idx` (`ouvrage_ISBN` ASC),
  CONSTRAINT `fk_livre_ouvrage1`
    FOREIGN KEY (`ouvrage_ISBN`)
    REFERENCES `TD1`.`ouvrage` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TD1`.`auteur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TD1`.`auteur` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NULL,
  `prenom` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TD1`.`ouvrage_has_auteur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TD1`.`ouvrage_has_auteur` (
  `ouvrage_ISBN` VARCHAR(50) NOT NULL,
  `auteur_id` INT NOT NULL,
  PRIMARY KEY (`ouvrage_ISBN`, `auteur_id`),
  INDEX `fk_ouvrage_has_auteur_auteur1_idx` (`auteur_id` ASC),
  INDEX `fk_ouvrage_has_auteur_ouvrage1_idx` (`ouvrage_ISBN` ASC),
  CONSTRAINT `fk_ouvrage_has_auteur_ouvrage1`
    FOREIGN KEY (`ouvrage_ISBN`)
    REFERENCES `TD1`.`ouvrage` (`ISBN`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ouvrage_has_auteur_auteur1`
    FOREIGN KEY (`auteur_id`)
    REFERENCES `TD1`.`auteur` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TD1`.`membre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TD1`.`membre` (
  `numero_emprunteur` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NULL,
  `prenom` VARCHAR(45) NULL,
  PRIMARY KEY (`numero_emprunteur`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TD1`.`emprunt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TD1`.`emprunt` (
  `livre_cote` VARCHAR(30) NOT NULL,
  `membre_numero_emprunteur` INT NOT NULL,
  `date_emprunt` DATE NOT NULL,
  `date_retour` DATE NULL,
  PRIMARY KEY (`livre_cote`, `membre_numero_emprunteur`, `date_emprunt`),
  INDEX `fk_livre_has_membre_membre1_idx` (`membre_numero_emprunteur` ASC),
  INDEX `fk_livre_has_membre_livre1_idx` (`livre_cote` ASC),
  CONSTRAINT `fk_livre_has_membre_livre1`
    FOREIGN KEY (`livre_cote`)
    REFERENCES `TD1`.`livre` (`cote`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_livre_has_membre_membre1`
    FOREIGN KEY (`membre_numero_emprunteur`)
    REFERENCES `TD1`.`membre` (`numero_emprunteur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
